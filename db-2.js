const pg = require("pg");const client = new pg.Client(  process.env.DATABASE_URL || "postgres://localhost/acme_school_db");client.connect();const sync = async () => {  const SQL = `  CREATE EXTENSION IF NOT EXISTS "uuid-ossp";  DROP TABLE IF EXISTS school;  DROP TABLE IF EXISTS student;    CREATE TABLE school(    school_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),    school_name VARCHAR(50) NOT NULL);CREATE TABLE student(    student_id UUID PRIMARY KEY default uuid_generate_v4(),    student_name VARCHAR(50) NOT NULL,    enrollment_status BOOLEAN,    school_id UUID REFERENCES school(school_id));  INSERT INTO school (school_id, school_name) VALUES (uuid_generate_v4(), 'UNC-Chapel Hill');  INSERT INTO school (school_id, school_name) VALUES (uuid_generate_v4(), 'Wake Forest');  INSERT INTO student (student_id, student_name, enrollment_status, school_id)  VALUES  (uuid_generate_v4(), 'lucy', true, (SELECT school_id FROM school where school.name = 'UNC-Chapel Hill'),   (uuid_generate_v4(), 'moe', true, (SELECT school_id FROM school where school.name = 'Wake Forest'),  (uuid_generate_v4(), 'larry', null, null),  (uuid_generate_v4(), 'curly', null, null)  `;  await client.query(SQL);};const readStudents = async () => {  return (await client.query("SELECT * FROM student")).rows;};const readSchools = async () => {  return (await client.query("SELECT * FROM school")).rows;};const createStudent = async ({ student_name }) => {  return (    await client.query(      "INSERT INTO student(student_name) VALUES ($1) returning *",      [student_name]    )  ).rows[0];};// const enrollStudent = async ({ student }) => {//   return (//     await client.query(//       "INSERT INTO school(student_id) VALUES ($1) returning *",//       [student]//     )//   ).rows[0];// };const createSchool = async ({ schoolName }) => {  return (    await client.query(      "INSERT INTO school(school_name) VALUES ($1) returning *",      [schoolName]    )  ).rows[0];};// const readSchoolsbyStudent = async student_id => {//   const SQL = "SELECT * FROM school WHERE student_id=$1";//   const result = await client.query(SQL, [student_id]);//   return result.rows;// };module.exports = {  sync,  readStudents,  readSchools,  // readSchoolsbyStudent,  createStudent,  createSchool  // enrollStudent};